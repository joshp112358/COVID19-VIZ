dead[1]
dead[]
recovered
dead+recovered
WW_proportion <- dead/(dead+recovered)*100
plot(WW_proportion, col="red",
main = "France Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion
WW_proportion[0]
WW_proportion[1]
WW_proportion <- dead/(dead+recovered)*100
plot(WW_proportion, col="red",
main = "France Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
dead
dead[1]
dead[,1]
dead[1,]
dead[1,1]
print(dead[1,1])
print(dead[1,1])+5
WW_proportion <- dead/(dead+recovered)*100
plot(WW_proportion, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
confirmed
confirmed[,4:length(confirmed)]
confirmed[,5:length(confirmed)]
colSum(confirmed[,5:length(confirmed)])
colSums(confirmed[,5:length(confirmed)])
colSums(confirmed[,5:length(confirmed)])[0]
colSums(confirmed[,5:length(confirmed)])[1]
plot(colSums(confirmed[,5:length(confirmed)]))
worldwide_confirmed <- colSums(confirmed[,5:length(confirmed)])
worldwide_deaths <- colSums(dead[,5:length(confirmed)])
worldwide_confirmed <- colSums(confirmed[,5:length(confirmed)])
worldwide_deaths <- colSums(deaths[,5:length(deaths)])
worldwide_recovered <- colSums(recovered[,5:length(confirmed)])
worldwide_confirmed <- colSums(confirmed[,5:length(confirmed)])
worldwide_deaths <- colSums(deaths[,5:length(deaths)])
worldwide_recovered <- colSums(recovered[,5:length(recovered)])
worldwide_deaths
worldwide_recovered
worldwide_confirmed
worldwide_deaths[5:length(worldwide_deaths)]
worldwide_deaths<-worldwide_deaths[5:length(worldwide_deaths)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion~China_proportion, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion~China_recovered$Date, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion col="red",
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
colnames(WW_proportion)
colnames(recovered)
worldwide_deaths
as.Date(colnames(recovered,format = "%m/%d/%y")
as.Date(colnames(recovered),format = "%m/%d/%y")
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
plot(WW_proportion~as.Date(colnames(recovered),format = "%m/%d/%y"), col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
as.Date(colnames(deaths),format = "%m/%d/%y")
as.Date(colnames(recovered),format = "%m/%d/%y")
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
dates[5:length(dates)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)],format = "%m/%d/%y"), col="red",
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
filter(confirmed,"Country/Region != China")
filter(confirmed,"Country/Region" != "China")
cconfirmed <- filter(confirmed,"Country/Region" != "China")
ddeaths <- filter(deaths, "Country/Region" != "China")
rrecovered <- filter(recovered, "Country/Region" != "China")
worldwide_confirmed <- colSums(cconfirmed[,5:length(cconfirmed)])
worldwide_deaths <- colSums(ddeaths[,5:length(ddeaths)])
worldwide_recovered <- colSums(rrecovered[,5:length(rrecovered)])
worldwide_deaths<-worldwide_deaths[5:length(worldwide_deaths)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
View(cconfirmed)
cconfirmed <- filter(confirmed,`Country/Region` != "China")
ddeaths <- filter(deaths, `Country/Region` != "China")
rrecovered <- filter(recovered, `Country/Region` != "China")
worldwide_deaths<-worldwide_deaths[5:length(worldwide_deaths)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered Without China",
xlab= "Time", ylab = "Percentage", type = "o")
cconfirmed <- filter(confirmed,`Country/Region` != "China")
ddeaths <- filter(deaths, `Country/Region` != "China")
rrecovered <- filter(recovered, `Country/Region` != "China")
View(recovered)
View(recovered)
library(readr)
recovered <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
deaths <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
confirmed <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(readr)
recovered <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
deaths <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
confirmed <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(tidyverse)
library(lubridate)
data_confirmed <- confirmed %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Confirmed")
data_deaths <- deaths %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Deaths")
data_recovered <- recovered %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Recovered")
data_recovered$Date<-as.Date(data_recovered$Date,format = "%m/%d/%y")
data_deaths$Date<-as.Date(data_deaths$Date,format = "%m/%d/%y")
data_confirmed$Date<-as.Date(data_confirmed$Date,format = "%m/%d/%y")
#China
China_confirmed <- filter(data_confirmed, Country=="China")
China_deaths <- filter(data_deaths, Country=="China")
China_recovered <- filter(data_recovered, Country=="China")
plot(China_confirmed$Confirmed~China_confirmed$Date, col="red",
main = "China Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(China_deaths$Deaths~China_deaths$Date, col="blue", type = "o")
points(China_recovered$Recovered~China_recovered$Date, col="green", type = "o")
China_proportion <- China_deaths$Deaths/(China_deaths$Deaths+China_recovered$Recovered)*100
plot(China_proportion~China_deaths$Date, col="red",
main = "China Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
China_proportion[length(China_proportion)]
#S Korea
Korea_confirmed <- filter(data_confirmed, Country=="Korea, South")
Korea_deaths <- filter(data_deaths, Country=="Korea, South")
Korea_recovered <- filter(data_recovered, Country=="Korea, South")
plot(Korea_confirmed$Confirmed~Korea_confirmed$Date, col="red",
main = "Korea Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Korea_deaths$Deaths~Korea_deaths$Date, col="blue", type = "o")
points(Korea_recovered$Recovered~Korea_recovered$Date, col="green", type = "o")
Korea_proportion <- Korea_deaths$Deaths/(Korea_deaths$Deaths+Korea_recovered$Recovered)*100
plot(Korea_proportion~Korea_deaths$Date, col="red",
main = "Korea Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Korea_proportion[length(Korea_proportion)]
#Italy
Italy_confirmed <- filter(data_confirmed, Country=="Italy")
Italy_deaths <- filter(data_deaths, Country=="Italy")
Italy_recovered <- filter(data_recovered, Country=="Italy")
plot(Italy_confirmed$Confirmed~Italy_confirmed$Date, col="red",
main = "Italy Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Italy_deaths$Deaths~Italy_deaths$Date, col="blue", type = "o")
points(Italy_recovered$Recovered~Italy_recovered$Date, col="green", type = "o")
Italy_proportion <- Italy_deaths$Deaths/(Italy_deaths$Deaths+Italy_recovered$Recovered)*100
plot(Italy_proportion~Italy_deaths$Date, col="red",
main = "Italy Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Italy_proportion[length(Italy_proportion)]
Spain_confirmed <- filter(data_confirmed, Country=="Spain")
Spain_deaths <- filter(data_deaths, Country=="Spain")
Spain_recovered <- filter(data_recovered, Country=="Spain")
plot(Spain_confirmed$Confirmed~Spain_confirmed$Date, col="red",
main = "Spain Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Spain_deaths$Deaths~Spain_deaths$Date, col="blue", type = "o")
points(Spain_recovered$Recovered~Spain_recovered$Date, col="green", type = "o")
Spain_proportion <- Spain_deaths$Deaths/(Spain_deaths$Deaths+Spain_recovered$Recovered)*100
plot(Spain_proportion~Spain_deaths$Date, col="red",
main = "Spain Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Spain_proportion[length(Spain_proportion)]
France_confirmed <- filter(data_confirmed, Country=="France")
France_deaths <- filter(data_deaths, Country=="France")
France_recovered <- filter(data_recovered, Country=="France")
plot(France_confirmed$Confirmed~Spain_confirmed$Date, col="red",
main = "France Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(France_deaths$Deaths~France_deaths$Date, col="blue", type = "o")
points(France_recovered$Recovered~France_recovered$Date, col="green", type = "o")
France_proportion <- France_deaths$Deaths/(France_deaths$Deaths+France_recovered$Recovered)*100
plot(France_proportion~France_deaths$Date, col="red",
main = "France Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
France_proportion[length(France_proportion)]
plot(China_proportion~China_deaths$Date, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
points(Italy_proportion~Italy_deaths$Date, col="green", type ="o")
points(Korea_proportion~Korea_deaths$Date, col="orange", type ="o")
points(Spain_proportion~Spain_deaths$Date, col="blue", type ="o")
legend("bottomleft", legend=c("China", "Italy", "South Korea", "Spain"),
col=c("red", "green", "orange", "blue"),lty=1:1, cex=0.8)
cconfirmed <- filter(confirmed,`Country/Region` != "China")
ddeaths <- filter(deaths, `Country/Region` != "China")
rrecovered <- filter(recovered, `Country/Region` != "China")
worldwide_confirmed <- colSums(cconfirmed[,5:length(cconfirmed)])
worldwide_deaths <- colSums(ddeaths[,5:length(ddeaths)])
worldwide_recovered <- colSums(rrecovered[,5:length(rrecovered)])
worldwide_deaths<-worldwide_deaths[5:length(worldwide_deaths)]
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(recovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered Without China",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
cconfirmed
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(rrecovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered Without China",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
cconfirmed <- filter(confirmed,`Country/Region` != "China")
ddeaths <- filter(deaths, `Country/Region` != "China")
rrecovered <- filter(recovered, `Country/Region` != "China")
worldwide_confirmed <- colSums(cconfirmed[,5:length(cconfirmed)])
worldwide_deaths <- colSums(ddeaths[,5:length(ddeaths)])
worldwide_recovered <- colSums(rrecovered[,5:length(rrecovered)])
worldwide_confirmed
worldwide_deaths
worldwide_recovered
worldwide_confirmed <- colSums(cconfirmed[,5:length(cconfirmed)])
worldwide_deaths <- colSums(ddeaths[,5:length(ddeaths)])
worldwide_recovered <- colSums(rrecovered[,5:length(rrecovered)])
worldwide_deaths
worldwide_recovered
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(rrecovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered Without China",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
shiny::runApp('Desktop/COVID-19-master/COVID_VIZ')
library(readr)
recovered <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
deaths <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
confirmed <- read_csv("./csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(tidyverse)
library(lubridate)
data_confirmed <- confirmed %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Confirmed")
data_deaths <- deaths %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Deaths")
data_recovered <- recovered %>%
select(-c(`Province/State`, Lat, Long)) %>%
rename(Country = `Country/Region`) %>%
group_by(Country) %>%
summarize_at(vars(-group_cols()), sum, na.rm = TRUE) %>%
pivot_longer(-Country, names_to = "Date", values_to = "Recovered")
data_recovered$Date<-as.Date(data_recovered$Date,format = "%m/%d/%y")
data_deaths$Date<-as.Date(data_deaths$Date,format = "%m/%d/%y")
data_confirmed$Date<-as.Date(data_confirmed$Date,format = "%m/%d/%y")
#China
China_confirmed <- filter(data_confirmed, Country=="China")
China_deaths <- filter(data_deaths, Country=="China")
China_recovered <- filter(data_recovered, Country=="China")
plot(China_confirmed$Confirmed~China_confirmed$Date, col="red",
main = "China Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(China_deaths$Deaths~China_deaths$Date, col="blue", type = "o")
points(China_recovered$Recovered~China_recovered$Date, col="green", type = "o")
China_proportion <- China_deaths$Deaths/(China_deaths$Deaths+China_recovered$Recovered)*100
plot(China_proportion~China_deaths$Date, col="red",
main = "China Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
China_proportion[length(China_proportion)]
#S Korea
Korea_confirmed <- filter(data_confirmed, Country=="Korea, South")
Korea_deaths <- filter(data_deaths, Country=="Korea, South")
Korea_recovered <- filter(data_recovered, Country=="Korea, South")
plot(Korea_confirmed$Confirmed~Korea_confirmed$Date, col="red",
main = "Korea Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Korea_deaths$Deaths~Korea_deaths$Date, col="blue", type = "o")
points(Korea_recovered$Recovered~Korea_recovered$Date, col="green", type = "o")
Korea_proportion <- Korea_deaths$Deaths/(Korea_deaths$Deaths+Korea_recovered$Recovered)*100
plot(Korea_proportion~Korea_deaths$Date, col="red",
main = "Korea Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Korea_proportion[length(Korea_proportion)]
#Italy
Italy_confirmed <- filter(data_confirmed, Country=="Italy")
Italy_deaths <- filter(data_deaths, Country=="Italy")
Italy_recovered <- filter(data_recovered, Country=="Italy")
plot(Italy_confirmed$Confirmed~Italy_confirmed$Date, col="red",
main = "Italy Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Italy_deaths$Deaths~Italy_deaths$Date, col="blue", type = "o")
points(Italy_recovered$Recovered~Italy_recovered$Date, col="green", type = "o")
Italy_proportion <- Italy_deaths$Deaths/(Italy_deaths$Deaths+Italy_recovered$Recovered)*100
plot(Italy_proportion~Italy_deaths$Date, col="red",
main = "Italy Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Italy_proportion[length(Italy_proportion)]
Spain_confirmed <- filter(data_confirmed, Country=="Spain")
Spain_deaths <- filter(data_deaths, Country=="Spain")
Spain_recovered <- filter(data_recovered, Country=="Spain")
plot(Spain_confirmed$Confirmed~Spain_confirmed$Date, col="red",
main = "Spain Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(Spain_deaths$Deaths~Spain_deaths$Date, col="blue", type = "o")
points(Spain_recovered$Recovered~Spain_recovered$Date, col="green", type = "o")
Spain_proportion <- Spain_deaths$Deaths/(Spain_deaths$Deaths+Spain_recovered$Recovered)*100
plot(Spain_proportion~Spain_deaths$Date, col="red",
main = "Spain Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
Spain_proportion[length(Spain_proportion)]
France_confirmed <- filter(data_confirmed, Country=="France")
France_deaths <- filter(data_deaths, Country=="France")
France_recovered <- filter(data_recovered, Country=="France")
plot(France_confirmed$Confirmed~Spain_confirmed$Date, col="red",
main = "France Confirmed Cases (Red), Deaths (Blue), Recovered (Green)",
xlab= "Time", ylab = "Count", type = "o")
points(France_deaths$Deaths~France_deaths$Date, col="blue", type = "o")
points(France_recovered$Recovered~France_recovered$Date, col="green", type = "o")
France_proportion <- France_deaths$Deaths/(France_deaths$Deaths+France_recovered$Recovered)*100
plot(France_proportion~France_deaths$Date, col="red",
main = "France Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
France_proportion[length(France_proportion)]
plot(China_proportion~China_deaths$Date, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
points(Italy_proportion~Italy_deaths$Date, col="green", type ="o")
points(Korea_proportion~Korea_deaths$Date, col="orange", type ="o")
points(Spain_proportion~Spain_deaths$Date, col="blue", type ="o")
legend("bottomleft", legend=c("China", "Italy", "South Korea", "Spain"),
col=c("red", "green", "orange", "blue"),lty=1:1, cex=0.8)
plot(China_proportion~China_deaths$Date, col="red",
main = "Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
points(Italy_proportion~Italy_deaths$Date, col="green", type ="o")
points(Korea_proportion~Korea_deaths$Date, col="orange", type ="o")
points(Spain_proportion~Spain_deaths$Date, col="blue", type ="o")
legend("bottomleft", legend=c("China", "Italy", "South Korea", "Spain"),
col=c("red", "green", "orange", "blue"),lty=1:1, cex=0.8)
cconfirmed <- filter(confirmed,`Country/Region` != "China")
ddeaths <- filter(deaths, `Country/Region` != "China")
rrecovered <- filter(recovered, `Country/Region` != "China")
worldwide_confirmed <- colSums(cconfirmed[,5:length(cconfirmed)])
worldwide_deaths <- colSums(ddeaths[,5:length(ddeaths)])
worldwide_recovered <- colSums(rrecovered[,5:length(rrecovered)])
worldwide_deaths
worldwide_recovered
WW_proportion <- worldwide_deaths/(worldwide_deaths+worldwide_recovered)*100
dates <- as.Date(colnames(rrecovered),format = "%m/%d/%y")
plot(WW_proportion~dates[5:length(dates)], col="red",
main = "Worldwide Deaths/Deaths+Recovered Without China",
xlab= "Time", ylab = "Percentage", type = "o")
WW_proportion[length(WW_proportion)]
China_proportion <- China_deaths$Deaths/(China_deaths$Deaths+China_recovered$Recovered)*100
plot(shift(China_proportion,5)~China_deaths$Date, col="red",
main = "China Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
China_proportion <- China_deaths$Deaths/(China_deaths$Deaths+China_recovered$Recovered)*100
plot(China_proportion~China_deaths$Date, col="red",
main = "China Deaths/Deaths+Recovered",
xlab= "Time", ylab = "Percentage", type = "o")
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ')
runApp('Desktop/COVID-19-master/COVID_VIZ/Covid-19_Visualization')
pwd(
)
cwd
csd(
)
cwd()
wd()
getwd()
shiny::runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
paste("hi","yo","sup")
paste("Wer", 5)
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
1:10[-1]
1:10
tail(1:10,1)
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
runApp('Desktop/COVID_VIZ')
rsconnect::setAccountInfo(name='joshyp',
token='BA23F76042376A7F085A7E66502D7F05',
secret='C9DFT78WJrSl07KM06+VxkB9r+p8ppFR+5pjX3Z8')
rsconnect::setAccountInfo()
rsconnect::setAccountInfo("Josh")
rsconnect::setAccountInfo(name='joshyp',
token='BA23F76042376A7F085A7E66502D7F05',
secret='C9DFT78WJrSl07KM06+VxkB9r+p8ppFR+5pjX3Z8')
update.packages(repos='http://cran.rstudio.com/', ask=FALSE, checkBuilt=TRUE)
rsconnect::setAccountInfo(name='joshyp',
token='BA23F76042376A7F085A7E66502D7F05',
secret='C9DFT78WJrSl07KM06+VxkB9r+p8ppFR+5pjX3Z8')
devtools::install_github("jeroen/openssl")
install.packages("devtools")
install.packages("devtools")
rsconnect::setAccountInfo(name='joshyp',
token='BA23F76042376A7F085A7E66502D7F05',
secret='C9DFT78WJrSl07KM06+VxkB9r+p8ppFR+5pjX3Z8')
install.packages("openssl")
rsconnect::setAccountInfo(name='joshyp',
token='BA23F76042376A7F085A7E66502D7F05',
secret='C9DFT78WJrSl07KM06+VxkB9r+p8ppFR+5pjX3Z8')
shiny::runApp('Desktop/COVID_VIZ')
print(5)
shiny::runApp('Desktop/COVID19-VIZ')
shiny::runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
runApp('Desktop/COVID19-VIZ')
